/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cv.app.inpatient.ui.setup;

import com.cv.app.common.Global;
import com.cv.app.inpatient.database.entity.FacilityType;
import com.cv.app.inpatient.ui.common.FacilityTypeTableModel;
import com.cv.app.pharmacy.database.controller.AbstractDataAccess;
import com.cv.app.util.NumberUtil;
import com.cv.app.util.Util1;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.apache.log4j.Logger;

/**
 *
 * @author MyintMo
 */
public class FacilityTypeSetupDialog extends javax.swing.JDialog {

    static Logger log = Logger.getLogger(FacilityTypeSetupDialog.class.getName());
    private final FacilityTypeTableModel tblTypeTableModel = new FacilityTypeTableModel();
    private final AbstractDataAccess dao = Global.dao;
    private FacilityType currFT = new FacilityType();
    private int selectRow = -1;

    /**
     * Creates new form FacilityTypeSetupDialog
     */
    public FacilityTypeSetupDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initTable();
    }

    public FacilityTypeSetupDialog() {
        super(Util1.getParent(), true);
        initComponents();
        initTable();
    }

    private boolean isValidEntry() {
        boolean status = true;

        if (txtTypeDesp.getText().trim().isEmpty()) {
            status = false;
            JOptionPane.showMessageDialog(Util1.getParent(), "Invalid type description.",
                    "Type Description", JOptionPane.ERROR_MESSAGE);
            txtTypeDesp.requestFocus();
        } else if (!NumberUtil.isNumber(txtPrice.getText())) {
            status = false;
            JOptionPane.showMessageDialog(Util1.getParent(), "Invalid number.",
                    "Invalid Price", JOptionPane.ERROR_MESSAGE);
            txtPrice.requestFocus();
        } else {
            currFT.setTypeDesp(txtTypeDesp.getText().trim());
            currFT.setPrice(NumberUtil.NZero(txtPrice.getText().trim()));
        }

        return status;
    }

    private void clear() {
        currFT = new FacilityType();
        txtTypeDesp.setText(null);
        txtPrice.setText(null);
    }

    private void save() {
        if (isValidEntry()) {
            try {
                boolean isEdit = false;
                if (currFT.getTypeId() != null) {
                    isEdit = true;
                }

                dao.save(currFT);
                if (isEdit) {
                    tblTypeTableModel.add(currFT);
                }
                clear();
                List<FacilityType> list = dao.findAllHSQL(
                        "select o from FacilityType o order by o.typeDesp");
                tblTypeTableModel.setList(list);
            } catch (Exception ex) {
                log.error("save : " + ex.getStackTrace()[0].getLineNumber() + " - " + ex);
            } finally {
                dao.close();
            }
        }
    }

    private void initTable() {
        try {
            List<FacilityType> list = dao.findAllHSQL(
                    "select o from FacilityType o order by o.typeDesp");
            tblTypeTableModel.setList(list);
        } catch (Exception ex) {
            log.error("initTable : " + ex.getMessage());
        } finally {
            dao.close();
        }
        tblType.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblType.getSelectionModel().addListSelectionListener(
                new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (tblType.getSelectedRow() >= 0) {
                    selectRow = tblType.convertRowIndexToModel(tblType.getSelectedRow());
                    List<FacilityType> list = tblTypeTableModel.getList();
                    if (list != null) {
                        if (!list.isEmpty()) {
                            setSelType(list.get(selectRow));
                        }
                    }
                }
            }
        });
    }

    private void setSelType(FacilityType type) {
        currFT = type;
        txtTypeDesp.setText(currFT.getTypeDesp());
        txtPrice.setText(currFT.getPrice().toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblType = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTypeDesp = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        butDelete = new javax.swing.JButton();
        butClear = new javax.swing.JButton();
        butSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Facility Type Setup");

        tblType.setFont(Global.textFont);
        tblType.setModel(tblTypeTableModel);
        tblType.setRowHeight(23);
        jScrollPane1.setViewportView(tblType);

        jLabel1.setFont(Global.lableFont);
        jLabel1.setText("Type Desp ");

        jLabel2.setFont(Global.lableFont);
        jLabel2.setText("Price");

        txtTypeDesp.setFont(Global.textFont);

        txtPrice.setFont(Global.textFont);

        butDelete.setText("Delete");
        butDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butDeleteActionPerformed(evt);
            }
        });

        butClear.setText("Clear");
        butClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butClearActionPerformed(evt);
            }
        });

        butSave.setText("Save");
        butSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPrice))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTypeDesp))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 83, Short.MAX_VALUE)
                        .addComponent(butSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butDelete)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtTypeDesp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(butDelete)
                            .addComponent(butClear)
                            .addComponent(butSave)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSaveActionPerformed
        save();
    }//GEN-LAST:event_butSaveActionPerformed

    private void butClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butClearActionPerformed
        clear();
    }//GEN-LAST:event_butClearActionPerformed

    private void butDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butDeleteActionPerformed
        if (currFT != null) {
            if (currFT.getTypeId() != null) {
                try {
                    dao.deleteSQL("delete from currFT where type_id = "
                            + currFT.getTypeId().toString());
                    tblTypeTableModel.deleteRow(selectRow);
                } catch (Exception ex) {
                    log.error("delete : " + ex.getStackTrace()[0].getLineNumber() + " - " + ex);
                    JOptionPane.showMessageDialog(Util1.getParent(), ex.toString(),
                            "Delete Error", JOptionPane.ERROR_MESSAGE);
                } finally {
                    dao.close();
                }
            }
        }
    }//GEN-LAST:event_butDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FacilityTypeSetupDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FacilityTypeSetupDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FacilityTypeSetupDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FacilityTypeSetupDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FacilityTypeSetupDialog dialog = new FacilityTypeSetupDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butClear;
    private javax.swing.JButton butDelete;
    private javax.swing.JButton butSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblType;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtTypeDesp;
    // End of variables declaration//GEN-END:variables
}
