/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.cv.app.inpatient.ui.entry;

import com.cv.app.common.Global;
import com.cv.app.inpatient.database.healper.RoomStatus;
import com.cv.app.pharmacy.database.controller.AbstractDataAccess;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import org.apache.log4j.Logger;

/**
 *
 * @author cv-svr
 */
public class RoomManagement extends javax.swing.JPanel {
    
    static Logger log = Logger.getLogger(RoomManagement.class.getName());
    private AbstractDataAccess dao = Global.dao;

    /**
     * Creates new form RoomManagement
     */
    public RoomManagement() {
        initComponents();
        initTable();
    }
    
    private void initTable() {
        try {
            ResultSet rs = dao.execSQL("select a.*, ifnull(b.reg_no,'Vacancy') as rstatus, if(b.reg_no=null,'',concat(b.reg_no,'-',b.patient_name)) as patient_name\n"
                    + "from (select aa.id, str.code, str.description as floor, aa.description as room, aa.price, aa.reg_no\n"
                    + "        from (SELECT bs.*,bst.type_desp,ft.price \n"
                    + "                FROM building_structur_type bst,building_structure bs left join facility_type ft on bs.facility_type_id =ft.type_id\n"
                    + "	           where bs.structure_type_id = bst.type_id and facility_type_id is not null) aa \n"
                    + "       inner join building_structure str on aa.parent_id = str.id) a\n"
                    + "left join (select a.building_structure_id as id, a.reg_no, a.ams_no, a.patient_name \n"
                    + "             from admission a where dc_status is null and building_structure_id is not null) b on a.id = b.id \n"
                    + "order by a.code, a.floor, a.room");
            if(rs != null){
                List<RoomStatus> list = new ArrayList();
                while(rs.next()){
                    RoomStatus ros = new RoomStatus(
                            rs.getInt("id"),
                            rs.getString("floor"),
                            rs.getString("code"),
                            rs.getString("room"),
                            rs.getDouble("price"),
                            rs.getString("reg_no"),
                            rs.getString("patient_name"),
                            rs.getString("rstatus").equals("Vacancy")
                    );
                    list.add(ros);
                }
            }
        } catch (Exception ex) {
            log.error("initTable : " + ex.getMessage());
        } finally {
            dao.close();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblRoomList = new javax.swing.JTable();
        txtFilter = new javax.swing.JTextField();

        tblRoomList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblRoomList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE)
                    .addComponent(txtFilter))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRoomList;
    private javax.swing.JTextField txtFilter;
    // End of variables declaration//GEN-END:variables
}
