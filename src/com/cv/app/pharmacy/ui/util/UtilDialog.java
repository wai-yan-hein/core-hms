/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cv.app.pharmacy.ui.util;

import com.cv.app.common.SelectionObserver;
import com.cv.app.opd.ui.util.PatientList;
import com.cv.app.pharmacy.database.controller.AbstractDataAccess;
import com.cv.app.util.Util1;
import java.awt.Container;

/**
 *
 * @author winswe
 */
public class UtilDialog extends javax.swing.JDialog {

    private final String panelName;
    private final SelectionObserver observer;
    private final AbstractDataAccess dao;
    //private String filter;
    private int locationId;
    
    /**
     * Creates new form UtilDialog
     * @param parent
     * @param modal
     * @param observer
     * @param panelName
     * @param dao
     * @param locationId
     */
    public UtilDialog(java.awt.Frame parent, boolean modal, SelectionObserver observer,
            String panelName, AbstractDataAccess dao, int locationId) {
        super(parent, panelName, modal);

        this.panelName = panelName;
        this.observer = observer;
        this.dao = dao;
        this.locationId = locationId;
        
        initComponents();

        /*Dimension screen = Util1.getScreenSize();
        int x = (screen.width - this.getWidth()) / 2;
        int y = (screen.height - this.getHeight()) / 2;
        
        setLocation(x, y);
        setVisible(true);*/
    }

    public UtilDialog(java.awt.Frame parent, boolean modal, SelectionObserver observer,
            String panelName, AbstractDataAccess dao, String filter) {
        super(parent, panelName, modal);

        this.panelName = panelName;
        this.observer = observer;
        this.dao = dao;
        //this.filter = filter;

        initComponents();
        //setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        Container contentPane = getContentPane();

        switch (panelName) {
            case "Customer List":
            case "Supplier List":
                contentPane.add(new CustomerList(this, observer, dao, panelName, locationId));
                break;
            case "Patient List":
                contentPane.add(new PatientList(this, observer, dao, panelName));
                break;
            case "Sale Voucher Search":
                if (Util1.getPropValue("system.location.trader.filter").equals("Y")) {
                    contentPane.add(new SaleVouSearch1(this, observer, dao));
                } else {
                    contentPane.add(new SaleVouSearch(this, observer, dao));
                }
                break;
            case "Purchase Voucher Search":
                //if (Util1.getPropValue("system.location.trader.filter").equals("Y")) {
                    contentPane.add(new PurchaseVouSearch1(this, observer, dao));
                //} else {*/
                    //contentPane.add(new PurchaseVouSearch(this, observer, dao));
                //}
                break;
            case "Return In Voucher Search":
                //if (Util1.getPropValue("system.location.trader.filter").equals("Y")) {
                //    contentPane.add(new RetInVouSearch1(this, observer, dao));
                //} else {
                    contentPane.add(new RetInVouSearch(this, observer, dao));
                //}
                break;
            case "Return Out Voucher Search":
                contentPane.add(new RetOutVouSearch(this, observer, dao));
                break;
            case "Transfer Voucher Search":
                contentPane.add(new TransferVouSearch(this, observer, dao));
                break;
            case "Adjust Search":
                contentPane.add(new AdjSearch(this, observer, dao));
                break;
            case "Damage Search":
                contentPane.add(new DamageSearch(this, observer, dao));
                break;
            case "Stock Opening Search":
                contentPane.add(new StockOPSearch(this, observer, dao));
                break;
            case "Price Change Search":
                contentPane.add(new PriceChangeSearch(this, observer, dao));
                break;
            case "Purchase Promo Search":
                contentPane.add(new PurchasePromoSearch(this, observer, dao));
                break;
        }
        pack();
    }// </editor-fold>
}
