/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cv.app.ot.ui.util;

import com.cv.app.common.Global;
import com.cv.app.common.KeyPropagate;
import com.cv.app.opd.ui.entry.OPD;
import com.cv.app.ot.database.entity.OTDoctorFee;
import com.cv.app.ot.ui.common.OTDoctorFeeTableModel;
import com.cv.app.ot.ui.common.OTDrFeeTableCellEditor;
import com.cv.app.pharmacy.database.controller.AbstractDataAccess;
import com.cv.app.ui.common.BestTableCellEditor;
import com.cv.app.util.JoSQLUtil;
import com.cv.app.util.Util1;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JComponent;
import javax.swing.KeyStroke;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.TableModelEvent;
import org.apache.log4j.Logger;

/**
 *
 * @author admin
 */
public class OTDoctorFeeDialog extends javax.swing.JDialog implements KeyPropagate {

    static Logger log = Logger.getLogger(OPD.class.getName());
    private final AbstractDataAccess dao = Global.dao;
    private final OTDoctorFeeTableModel tblOTDoctorFeeTableModel;

    public OTDoctorFeeDialog(List<OTDoctorFee> listDrFee, Integer serviceId) {
        super(Util1.getParent(), true);
        tblOTDoctorFeeTableModel = new OTDoctorFeeTableModel(dao, serviceId);
        initComponents();
        initTable();
        tblOTDoctorFeeTableModel.setParent(tblOTDoctorFee);
        tblOTDoctorFeeTableModel.setListDrFee(listDrFee);
        tblOTDoctorFee.setRowSelectionInterval(0, 0);
        tblOTDoctorFee.setColumnSelectionInterval(0, 0);
        tblOTDoctorFee.requestFocus();
        formActionKeyMapping(tblOTDoctorFee);
    }

    private void initTable() {
        tblOTDoctorFee.getTableHeader().setFont(Global.lableFont);
        tblOTDoctorFee.getColumnModel().getColumn(0).setPreferredWidth(200);//Doctor Name
        tblOTDoctorFee.getColumnModel().getColumn(0).setCellEditor(new OTDrFeeTableCellEditor(dao, this));
        tblOTDoctorFee.getColumnModel().getColumn(1).setCellEditor(new BestTableCellEditor(this));
        tblOTDoctorFee.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblOTDoctorFee.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
        });
        tblOTDoctorFee.getModel().addTableModelListener((TableModelEvent e) -> {
            txtTotal.setText(getTotal().toString());
        });

        //tblOTDoctorFee.getInputMap().put(KeyStroke.getKeyStroke("F10"), "F10-Action");
        //tblOTDoctorFee.getActionMap().put("F10-Action", actionClose);
    }

    public Double getTotal() {
        List<OTDoctorFee> listFee = tblOTDoctorFeeTableModel.getListDrFee();
        String strSql = "SELECT * FROM com.cv.app.ot.database.entity.OTDoctorFee"
                + " EXECUTE ON ALL sum(drFee) AS total";
        Object total = JoSQLUtil.getSaveValue(listFee, strSql, "total");
        if (total == null) {
            return 0.0;
        } else {
            return Double.parseDouble(total.toString());
        }
    }

    public List<OTDoctorFee> getEntryDrFee() {
        return tblOTDoctorFeeTableModel.getEntryDrFee();
    }

    private void formActionKeyMapping(JComponent jc) {
        //Save
        jc.getInputMap().put(KeyStroke.getKeyStroke("F10"), "F10-Action");
        jc.getActionMap().put("F10-Action", actionClose);
    }

    private Action actionClose = new AbstractAction() {
        @Override
        public void actionPerformed(ActionEvent e) {
            dispose();
        }
    };

    @Override
    public void keyEvent(KeyEvent e) {
        if (e.isControlDown() && (e.getKeyCode() == KeyEvent.VK_F8)) {

        } else if (e.isShiftDown() && (e.getKeyCode() == KeyEvent.VK_F8)) {

        } else if (e.getKeyCode() == KeyEvent.VK_F5) {

        } else if (e.getKeyCode() == KeyEvent.VK_F7) {

        } else if (e.getKeyCode() == KeyEvent.VK_F9) {

        } else if (e.getKeyCode() == KeyEvent.VK_F10) {
            dispose();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblOTDoctorFee = new javax.swing.JTable();
        txtTotal = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("OT Doctor Fee Entry");

        tblOTDoctorFee.setFont(Global.textFont);
        tblOTDoctorFee.setModel(tblOTDoctorFeeTableModel);
        tblOTDoctorFee.setRowHeight(23);
        jScrollPane1.setViewportView(tblOTDoctorFee);

        txtTotal.setEditable(false);
        txtTotal.setFont(Global.textFont);
        txtTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel1.setFont(Global.lableFont);
        jLabel1.setText("Total :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblOTDoctorFee;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
