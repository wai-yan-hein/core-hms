drop view if exists v_session;
create algorithm=undefined definer=root@localhost sql security definer view v_session as select sh.sale_date as tran_date,sh.sale_inv_id as inv_id,ifnull(sh.cus_id,pd.reg_no) as cus_id,ifnull(t.trader_name,pd.patient_name) as trader_name,sh.vou_total as vou_total,sh.paid_amount as paid,sh.discount as discount,sh.balance as balance,sh.sale_exp_total as expense,sh.created_by as user_id,au.user_short_name as user_short_name,sh.session_id as session_id,sh.intg_upd_status as intg_upd_status,substr(sh.sale_inv_id,1,2) as machine,sh.location_id as location_id,ifnull(sh.deleted,0) as deleted,'Sale' as source,sh.currency_id as currency,sh.paid_currency as paid_currency,sh.paid_currency_amt as paid_currency_amt,t.discriminator as discriminator,sh.payment_type_id as payment_type,sh.tax_p as tax_p,sh.tax_amt as tax_amt,sh.remark as ref_no,0 as exp_type,'' as expense_name,sh.account_id as tran_account_id,t.account_code as cv_account_code,sh.sale_exp_total_in as exp_in,t.group_id as group_id,s.session_name as session_name,pt.payment_type_name as payment_type_name,if(sh.admission_no = '',null,sh.admission_no) as admission_no,sh.doctor_id as doctor_id,dr.doctor_name as doctor_name,null as account_id,t.stu_no as stu_no from ((((((sale_his sh left join trader t on(sh.cus_id = t.trader_id)) left join appuser au on(sh.created_by = au.user_id)) left join patient_detail pd on(sh.reg_no = pd.reg_no)) left join session s on(sh.session_id = s.session_id)) left join payment_type pt on(sh.payment_type_id = pt.payment_type_id)) left join doctor dr on(sh.doctor_id = dr.doctor_id)) union all select ph.pur_date as tran_date,ph.pur_inv_id as inv_id,ph.cus_id as cus_id,t.trader_name as trader_name,ph.vou_total as vou_total,ph.paid as paid,ph.discount as discount,ph.balance as balance,ph.pur_exp_total as expense,ph.created_by as user_id,au.user_short_name as user_short_name,ph.session_id as session_id,ph.intg_upd_status as intg_upd_status,substr(ph.pur_inv_id,1,2) as machine,ph.location as location,ifnull(ph.deleted,0) as deleted,'Purchase' as source,ph.currency as currency,ph.currency as paid_currency,0 as paid_currency_amt,t.discriminator as discriminator,ph.payment_type as payment_type,ph.tax_p as tax_p,ph.tax_amt as tax_amt,ph.ref_no as ref_no,0 as exp_type,'' as expense_name,ph.account_id as tran_account_id,t.account_code as cv_account_code,0 as exp_in,t.group_id as group_id,s.session_name as session_name,pt.payment_type_name as payment_type_name,null as admission_no,null as doctor_id,null as doctor_name,null as account_id,t.stu_no as stu_no from ((((pur_his ph left join trader t on(ph.cus_id = t.trader_id)) left join appuser au on(ph.created_by = au.user_id)) left join session s on(ph.session_id = s.session_id)) left join payment_type pt on(ph.payment_type = pt.payment_type_id)) union all select rih.ret_in_date as tran_date,rih.ret_in_id as inv_id,ifnull(rih.cus_id,pd.reg_no) as cus_id,ifnull(t.trader_name,pd.patient_name) as trader_name,rih.vou_total as vou_total,rih.paid as paid,0 as discount,rih.balance as balance,0 as expense,rih.created_by as user_id,au.user_short_name as user_short_name,rih.session_id as session_id,rih.intg_upd_status as intg_upd_status,substr(rih.ret_in_id,1,2) as machine,rih.location as location,ifnull(rih.deleted,0) as deleted,'Return In' as source,rih.currency as currency,rih.currency as paid_currency,0 as paid_currency_amt,t.discriminator as discriminator,rih.payment_type as payment_type,0 as tax_p,0 as tax_amt,'' as ref_no,0 as exp_type,'' as expense_name,rih.account_id as tran_account_id,t.account_code as cv_account_code,0 as exp_in,t.group_id as group_id,s.session_name as session_name,pt.payment_type_name as payment_type_name,if(rih.admission_no = '',null,rih.admission_no) as admission_no,null as doctor_id,null as doctor_name,null as account_id,t.stu_no as stu_no from (((((ret_in_his rih left join trader t on(rih.cus_id = t.trader_id)) left join appuser au on(rih.created_by = au.user_id)) left join patient_detail pd on(rih.reg_no = pd.reg_no)) left join session s on(rih.session_id = s.session_id)) left join payment_type pt on(rih.payment_type = pt.payment_type_id)) union all select roh.ret_out_date as tran_date,roh.ret_out_id as inv_id,roh.cus_id as cus_id,t.trader_name as trader_name,roh.vou_total as vou_total,roh.paid as paid,0 as discount,roh.balance as balance,0 as expense,roh.created_by as user_id,au.user_short_name as user_short_name,roh.session_id as session_id,roh.intg_upd_status as intg_upd_status,substr(roh.ret_out_id,1,2) as machine,roh.location as location,ifnull(roh.deleted,0) as deleted,'Return Out' as source,roh.currency as currency,roh.currency as paid_currency,0 as paid_currency_amt,t.discriminator as discriminator,roh.payment_type as payment_type,0 as tax_p,0 as tax_amt,'' as ref_no,0 as exp_type,'' as expense_name,roh.account_id as tran_account_id,t.account_code as cv_account_code,0 as exp_in,t.group_id as group_id,s.session_name as session_name,pt.payment_type_name as payment_type_name,null as admission_no,null as doctor_id,null as doctor_name,null as account_id,t.stu_no as stu_no from ((((ret_out_his roh left join trader t on(roh.cus_id = t.trader_id)) left join appuser au on(roh.created_by = au.user_id)) left join session s on(roh.session_id = s.session_id)) left join payment_type pt on(roh.payment_type = pt.payment_type_id)) union all select ph.pay_date as tran_date,ph.payment_id as inv_id,ph.trader_id as cus_id,t.trader_name as trader_name,0 as vou_total,if(t.discriminator = 'S',ph.paid_amtc * -1,ph.paid_amtc) as paid,0 as discount,0 as balance,0 as expense,ph.created_by as user_id,au.user_short_name as user_short_name,ph.session_id as session_id,ph.intg_upd_status as intg_upd_status,coalesce(ph.machine_id,0) as machine,ph.location_id as location_id,ifnull(ph.deleted,0) as deleted,'Trader Payment' as source,ph.currency_id as currency,ph.currency_id as paid_currency,0 as paid_currency_amt,t.discriminator as discriminator,if(ph.pay_option = 'Cash',1,0) as payment_type,0 as tax_p,0 as tax_amt,'' as ref_no,0 as exp_type,'' as expense_name,ph.account_id as tran_account_id,t.account_code as cv_account_code,0 as exp_in,t.group_id as group_id,s.session_name as session_name,'Cash' as payment_type_name,null as admission_no,null as doctor_id,null as doctor_name,ph.account_id as account_id,t.stu_no as stu_no from (((payment_his ph left join trader t on(ph.trader_id = t.trader_id)) left join appuser au on(ph.created_by = au.user_id)) left join session s on(ph.session_id = s.session_id)) union all select cast(ge.exp_date as date) as tran_date,ge.gene_id as inv_id,' ' as cus_id,ge.desp as trader_name,0 as vou_total,0 as paid,0 as discount,0 as balance,ge.exp_amount as expense,ge.created_by as user_id,au.user_short_name as user_short_name,ge.session_id as session_id,null as intg_upd_status,'00' as machine,ge.location_id as location_id,0 as deleted,if(ifnull(ge.exp_amount,0) = 0,'Cash In','Cash Out') as source,'MMK' as currency,'MMK' as paid_currency,if(ifnull(ge.exp_amount,0) = 0,ge.dr_amt,ge.exp_amount) as paid_currency_amt,'E' as discriminator,1 as payment_type,0 as tax_p,0 as tax_amt,'' as ref_no,ge.exp_type as exp_type,et.expense_name as expense_name,'' as tran_account_id,'' as cv_account_code,ge.dr_amt as exp_in,'-' as group_id,s.session_name as session_name,'Cash' as payment_type_name,null as admission_no,null as doctor_id,null as doctor_name,null as account_id,null as stu_no from (((gen_expense ge left join appuser au on(ge.created_by = au.user_id)) left join expense_type et on(ge.exp_type = et.expense_type_id)) left join session s on(ge.session_id = s.session_id)) union all select th.tran_date as tran_date,th.transfer_id as inv_id,th.cus_id as cus_id,t.trader_name as trader_name,th.vou_total as vou_total,0 as paid,0 as discount,th.vou_total as balance,0 as expense,th.created_by as user_id,au.user_short_name as user_short_name,th.session_id as session_id,th.intg_upd_status_sale as intg_upd_status,substr(th.transfer_id,1,2) as machine,th.from_location as location_id,th.deleted as deleted,'TRAN-Sale' as source,'MMK' as currency,null as paid_currency,0 as paid_currency_amt,t.discriminator as discriminator,2 as payment_type,0 as tax_p,0 as tax_amt,th.remark as ref_no,0 as exp_type,'' as expense_name,null as tran_account_id,t.account_code as cv_account_code,0 as exp_in,t.group_id as group_id,s.session_name as session_name,'Credit' as payment_type_name,null as admission_no,null as doctor_id,null as doctor_name,null as account_id,t.stu_no as stu_no from (((transfer_his th join trader t on(th.cus_id = t.trader_id)) left join appuser au on(th.created_by = au.user_id)) left join session s on(th.session_id = s.session_id)) union all select th.tran_date as tran_date,th.transfer_id as inv_id,th.cus_id as cus_id,t.trader_name as trader_name,th.vou_total as vou_total,0 as paid,0 as discount,th.vou_total as balance,0 as expense,th.created_by as user_id,au.user_short_name as user_short_name,th.session_id as session_id,th.intg_upd_status_pur as intg_upd_status,substr(th.transfer_id,1,2) as machine,th.to_location as location_id,th.deleted as deleted,'TRAN-Purchase' as source,'MMK' as currency,null as paid_currency,0 as paid_currency_amt,t.discriminator as discriminator,2 as payment_type,0 as tax_p,0 as tax_amt,th.remark as ref_no,0 as exp_type,'' as expense_name,null as tran_account_id,t.account_code as cv_account_code,0 as exp_in,t.group_id as group_id,s.session_name as session_name,'Credit' as payment_type_name,null as admission_no,null as doctor_id,null as doctor_name,null as account_id,t.stu_no as stu_no from (((transfer_his th join trader t on(th.sup_id = t.trader_id)) left join appuser au on(th.created_by = au.user_id)) left join session s on(th.session_id = s.session_id));

alter table trader_op 
add column intg_upd_status varchar(15) null after currency;

alter table opd_category 
add column expense bit(1) not null default 0;

alter table inp_category 
add column expense bit(1) not null default 0;

alter table ot_group 
add column expense bit(1) not null default 0;

alter table opd_category 
add column intg_upd_status varchar(15);

alter table inp_category 
add column intg_upd_status varchar(15);

alter table ot_group 
add column intg_upd_status varchar(15);

